/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Arboles.Arbol;
import listas.*;

/**
 *
 * @author donco
 */
public class ListadoNormal extends javax.swing.JFrame {

    /**
     * Creates new form ListadoNormal
     */
    DefaultTableModel modelo;

    public ListadoNormal() {
        initComponents();
        modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Profesion");
        modelo.addColumn("Promedio");
        this.jTable1.setModel(modelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 600));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Profesion", "Promedio" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Confirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Confirmar (al rev√©s)");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Ingresar codigo para agregar los egresados por el orden establecido
        ListaSimple lista = new ListaSimple();
        Nodo nodo = new Nodo();
        modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Profesion");
        modelo.addColumn("Promedio");
        this.jTable1.setModel(modelo);
        switch (jComboBox1.getSelectedItem().toString()) {
            case "Nombre":
                lista = Arbol.ArbolNombres.ListaInOrden();
                nodo = lista.getInicio();
                for (int i = 0; i < Arbol.listaEgresados.length; i++) {
                    try {
                        while (nodo != null) {

                            String arreglo[] = new String[3];
                            arreglo[0] = Arbol.listaEgresados[(int) nodo.getDato()].nombre;
                            arreglo[1] = Arbol.listaEgresados[(int) nodo.getDato()].profesion;
                            arreglo[2] = String.valueOf(Arbol.listaEgresados[(int) nodo.getDato()].calificacion);
                            modelo.addRow(arreglo);
                            nodo = nodo.getSiguiente();
                        }

                    } catch (Exception e) {

                    }

                }

                break;
            case "Profesion":
                lista = Arbol.ArbolProfesion.ListaInOrden();

                nodo = lista.getInicio();
                try {
                    while (nodo != null) {

                        String arreglo[] = new String[3];
                        arreglo[0] = Arbol.listaEgresados[(int) nodo.getDato()].nombre;
                        arreglo[1] = Arbol.listaEgresados[(int) nodo.getDato()].profesion;
                        arreglo[2] = String.valueOf(Arbol.listaEgresados[(int) nodo.getDato()].calificacion);
                        modelo.addRow(arreglo);
                        nodo = nodo.getSiguiente();
                    }

                } catch (Exception e) {

                }

                break;
            case "Promedio":
                lista = Arbol.ArbolCalificacion.ListaInOrden();
                nodo = lista.getInicio();
                for (int i = 0; i < Arbol.listaEgresados.length; i++) {
                    try {
                        while (nodo != null) {

                            String arreglo[] = new String[3];
                            arreglo[0] = Arbol.listaEgresados[(int) nodo.getDato()].nombre;
                            arreglo[1] = Arbol.listaEgresados[(int) nodo.getDato()].profesion;
                            arreglo[2] = String.valueOf(Arbol.listaEgresados[(int) nodo.getDato()].calificacion);
                            modelo.addRow(arreglo);
                            nodo = nodo.getSiguiente();
                        }

                    } catch (Exception e) {

                    }

                }

                break;
        }
        jButton1.setEnabled(false);
        jButton1.setEnabled(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ListaSimple lista = new ListaSimple();
        Nodo nodo = new Nodo();
        modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Profesion");
        modelo.addColumn("Promedio");
        this.jTable1.setModel(modelo);
        switch (jComboBox1.getSelectedItem().toString()) {
            case "Nombre":
                lista = Arbol.ArbolNombres.ListaInOrden();
                nodo = lista.getInicio();
                int[] reves3 = new int[lista.tamanio()];
                for (int i = 0; i < lista.tamanio(); i++) {
                    reves3[i] = (int) nodo.getDato();
                    nodo = nodo.getSiguiente();
                }
                for (int i = lista.tamanio() - 1; i >= 0; i--) {
                    try {

                        String arreglo[] = new String[3];
                        arreglo[0] = Arbol.listaEgresados[reves3[i]].nombre;
                        arreglo[1] = Arbol.listaEgresados[reves3[i]].profesion;
                        arreglo[2] = String.valueOf(Arbol.listaEgresados[reves3[i]].calificacion);
                        modelo.addRow(arreglo);

                    } catch (Exception e) {

                    }

                }

                break;
            case "Profesion":
                lista = Arbol.ArbolProfesion.ListaInOrden();

                nodo = lista.getInicio();
                int[] reves2 = new int[lista.tamanio()];
                for (int i = 0; i < lista.tamanio(); i++) {
                    reves2[i] = (int) nodo.getDato();
                    nodo = nodo.getSiguiente();
                }
                for (int i = lista.tamanio() - 1; i >= 0; i--) {
                    try {

                        String arreglo[] = new String[3];
                        arreglo[0] = Arbol.listaEgresados[reves2[i]].nombre;
                        arreglo[1] = Arbol.listaEgresados[reves2[i]].profesion;
                        arreglo[2] = String.valueOf(Arbol.listaEgresados[reves2[i]].calificacion);
                        modelo.addRow(arreglo);

                    } catch (Exception e) {

                    }

                }

                break;
            case "Promedio":
                lista = Arbol.ArbolCalificacion.ListaInOrden();
                nodo = lista.getInicio();
                int[] reves = new int[lista.tamanio()];
                for (int i = 0; i < lista.tamanio(); i++) {
                    reves[i] = (int) nodo.getDato();
                    nodo = nodo.getSiguiente();
                }
                for (int i = lista.tamanio() - 1; i >= 0; i--) {
                    try {

                        String arreglo[] = new String[3];
                        arreglo[0] = Arbol.listaEgresados[reves[i]].nombre;
                        arreglo[1] = Arbol.listaEgresados[reves[i]].profesion;
                        arreglo[2] = String.valueOf(Arbol.listaEgresados[reves[i]].calificacion);
                        modelo.addRow(arreglo);

                    } catch (Exception e) {

                    }

                }

                break;
        }
        jButton2.setEnabled(false);
        jButton2.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListadoNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListadoNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListadoNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListadoNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListadoNormal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
